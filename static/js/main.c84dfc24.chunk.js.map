{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","this","props","searchText","onChangeSearchField","type","placeholder","onChange","value","React","Component","ItemStatusFilter","buttons","name","text","filterMode","onChangeFilterMode","map","secondCls","key","onClick","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","cls","TodoList","todos","elements","item","id","itemProps","ItemAddForm","state","onLabelChange","evt","setState","target","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","filter","addItem","newItem","concat","toggleProperty","propName","filteredData","length","toLowerCase","includes","items","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c84dfc24.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;\n","import React from 'react';\n\nimport './app-header.css';\n\nconst AppHeader = ({ toDo, done }) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import SearchPanel from './search-panel';\n\nexport default SearchPanel;\n","import React from 'react';\n\nimport './search-panel.css';\n\nexport default class SearchPanel extends React.Component {\n\n  render() {\n    const { searchText, onChangeSearchField } = this.props;\n\n    return <input type=\"text\"\n      className=\"form-control search-input\"\n      placeholder=\"type to search\"\n      onChange={ onChangeSearchField }\n      value={ searchText }/>;\n  }\n}\n","import ItemStatusFilter from './item-status-filter';\n\nexport default ItemStatusFilter;\n","import React from 'react';\n\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends React.Component {\n  buttons = [\n    { name: 'all', text: 'All' },\n    { name: 'active', text: 'Active' },\n    { name: 'done', text: 'Done' },\n  ];\n\n  render() {\n    const { filterMode, onChangeFilterMode } = this.props;\n\n    const buttons = this.buttons.map(({ name, text }) => {\n      const secondCls = filterMode === name ? 'btn-info' : 'btn-outline-secondary';\n\n      return (\n        <button\n          key={name}\n          type=\"button\"\n          onClick={ () => onChangeFilterMode(name) }\n          className={ `btn ${secondCls}` }>\n            { text }\n        </button>\n      );\n    });\n\n    return (\n      <div className=\"btn-group\">\n        { buttons }\n      </div>\n    );\n  }\n}\n","import TodoListItem from './todo-list-item';\n\nexport default TodoListItem;\n","import React from 'react';\n\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends React.Component {\n\n  render() {\n    const {\n      label,\n      onDeleted,\n      onToggleImportant,\n      onToggleDone,\n      important,\n      done\n    } = this.props;\n\n    let cls = 'todo-list-item';\n\n    if (done) {\n      cls += ' done';\n    }\n\n    if (important) {\n      cls += ' important';\n    }\n\n    return (\n      <span className={ cls }>\n        <span\n          className=\"todo-list-item-label\"\n          onClick= { onToggleDone }>\n            {label}\n        </span>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-success btn-sm float-right\"\n          onClick={ onToggleImportant }>\n            <i className=\"fa fa-exclamation\" />\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-danger btn-sm float-right\"\n          onClick={ onDeleted }>\n            <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    );\n  };\n}\n","import TodoList from './todo-list';\n\nexport default TodoList;\n","import React from 'react';\n\nimport TodoListItem from '../todo-list-item';\n\nimport './todo-list.css';\n\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\n\n  const elements = todos.map(item => {\n    const { id, ...itemProps } = item;\n    return (\n      <li key={id}\n        className=\"list-group-item\">\n          <TodoListItem\n            { ...itemProps }\n            onDeleted={ () => onDeleted(id) }\n            onToggleImportant={ () => onToggleImportant(id) }\n            onToggleDone={ () => onToggleDone(id) } />\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"list-group todo-list\">\n      { elements }\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import ItemAddForm from './item-add-form';\n\nexport default ItemAddForm;\n","import React from 'react';\n\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends React.Component {\n\n  state = {\n    label: '',\n  };\n\n  onLabelChange = evt => {\n    this.setState({ label: evt.target.value });\n  };\n\n  onSubmit = evt => {\n    evt.preventDefault();\n    this.props.onItemAdded(this.state.label);\n    this.setState({ label: '' })\n  };\n\n  render() {\n    const { label } = this.state;\n\n    return (\n      <form className=\"item-add-form d-flex\"\n        onSubmit={ this.onSubmit }>\n        <input type=\"text\"\n          className=\"form-control\"\n          placeholder=\"What needs to be done\"\n          onChange={ this.onLabelChange }\n          value={ label } />\n        <button className=\"btn btn-outline-secondary\">\n          Add Item\n        </button>\n      </form>\n    );\n  }\n}\n","import App from './app';\n\nexport default App;\n","import React from 'react';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport ItemStatusFilter from '../item-status-filter';\nimport TodoList from '../todo-list';\nimport ItemAddForm from '../item-add-form';\n\nimport './app.css';\n\nexport default class App extends React.Component {\n  maxId = 100;\n\n  state = {\n    todoData: [\n      this.createTodoItem('Drink Coffee'),\n      this.createTodoItem('Make Awesome App'),\n      this.createTodoItem('Have a lunch'),\n    ],\n    searchText: '',\n    filterMode: 'all',\n  };\n\n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++,\n    };\n  }\n\n  deleteItem = id => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: todoData.filter(item => item.id !== id)\n      };\n    });\n  };\n\n  addItem = text => {\n    const newItem = this.createTodoItem(text);\n\n    this.setState(({ todoData }) => {\n      return {\n        todoData: todoData.concat(newItem)\n      };\n    });\n  };\n\n  toggleProperty(id, propName) {\n    this.setState(({ todoData }) => {\n      const updatedData = todoData.map(item => {\n        if (item.id === id) {\n          item[propName] = !item[propName];\n        }\n\n        return item;\n      });\n\n      return {\n        todoData: updatedData\n      };\n    });\n  }\n\n  onToggleImportant = id => {\n    this.toggleProperty(id, 'important');\n  };\n\n  onToggleDone = id => {\n    this.toggleProperty(id, 'done');\n  };\n\n  onChangeSearchField = evt => {\n    this.setState({ searchText: evt.target.value });\n  };\n\n  getFilteredTodos() {\n    const { todoData, searchText, filterMode } = this.state;\n\n    let filteredData;\n    switch (filterMode) {\n      case 'Active':\n        filteredData = todoData.filter(item => !item.done);\n        break;\n      case 'Done':\n        filteredData = todoData.filter(item => item.done);\n        break;\n      case 'All':\n      default:\n        filteredData = todoData;\n        break;\n    }\n\n    if (searchText.length === 0) {\n      return filteredData;\n    }\n\n    return filteredData.filter(item => item.label.toLowerCase().includes(searchText.toLowerCase()));\n  }\n\n  search(items, searchText) {\n    if (searchText.length === 0) {\n      return items;\n    }\n\n    return items.filter(item => item.label.toLowerCase().includes(searchText.toLowerCase()));\n  }\n\n  filter(items, filterMode) {\n    switch (filterMode) {\n      case 'active':\n        return items.filter(item => !item.done);\n      case 'done':\n        return items.filter(item => item.done);\n      case 'all':\n      default:\n        return items;\n    }\n  }\n\n  onChangeFilterMode = filterMode => {\n    this.setState({ filterMode });\n  }\n\n  render() {\n    const { todoData, searchText, filterMode } = this.state;\n    const visibleItems = this.filter(this.search(todoData, searchText), filterMode);\n    const doneCount = todoData.filter(item => item.done).length;\n    const todoCount = todoData.length - doneCount;\n\n    return (\n      <div className=\"todo-app\">\n        <AppHeader toDo={ todoCount } done={ doneCount } />\n        <div className=\"top-panel d-flex\">\n          <SearchPanel\n            onChangeSearchField={ this.onChangeSearchField }\n            searchText={ searchText } />\n          <ItemStatusFilter\n            onChangeFilterMode={ this.onChangeFilterMode }\n            filterMode={ filterMode } />\n        </div>\n        <TodoList\n          todos={ visibleItems }\n          onDeleted={ this.deleteItem }\n          onToggleImportant={ this.onToggleImportant }\n          onToggleDone={ this.onToggleDone } />\n        <ItemAddForm\n          onItemAdded={ this.addItem } />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}